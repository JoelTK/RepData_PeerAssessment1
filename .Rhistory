today()
day <- today()
this_day <- today()
this_day
day()
day(this_day)
wday(this_day)
wday(this_day label = TRUE)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("19200102")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
time(dt1)
hms("03:22:12")
hms("03:22:14")
dt2
hms(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 2, minutes = 5)
this_moment
now("America/New_York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 4)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- update(depart, hours = 15, minutes = 50)
library(swirl)
swirl()
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz("Asia/Hong_Kong")
with_tz(arrive, tz = "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- with_tz(mdy(June 17, 2008), tz = "Singapore")
last_time <- with_tz(mdy(June 17 2008), tz = "Singapore")
df
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch)_
stopwatch()
library("swirl")
swirl()
?Devices
Devices(faithful, call)
Devices(faithful, plot)
deviceIsInteractive()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cards, plot(speed, dist))
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(airquality)
boxplot(ozone~Month, airquality)
boxplot(Ozone~Month, airquality)
library("swirl")
rm(list=ls())
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xypot(y~x|f, layout=c(2,1))
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source("plot1.R", local = TRUE)
source()
source("plot1.R", local = TRUE)
source("plot1.R", local = TRUE)
source("plot1.R", local = TRUE)
2
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"))
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color~cut, data=diamonds, strip=FALSE, pch=20, xlab = myxlab, ylab=myylab, main=mymain)
1
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab = myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data=diamonds, pch=20, xlab = myxlab, ylab=myylab, main=mymain)
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1, len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow")
)
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rbg
?rgb
p3 <- colorRampPalette(c("blue","green"))
p3 <- colorRampPalette(c("blue","green"), alpha=.5)
p3(5)
plot(x, y, pch=19, col=rgb(0, .5, .5))
plot(x, y, pch=19, col=rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
showME(cols)
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
myhogh
myhigh
qplot(drv, hwy, data=mpg, geom = "boxplot")
qplot(drv, hwy, data=mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data=mpg, set=drv)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, factes = drv~., binwidth=2)
qplot(hwy, data=mpg, facets = drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv)
g <- ggplot(mpg, displ, hwy)
g <- ggplot(data=mpg, displ, hwy)
g <- ggplot(data=mpg, displ~hwy)
g <- ggplot(mpg, displ~hwy)
g
1
g <- ggplot(mpg, aes(displ,hwy)
)
g
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(lm)
g+geom_point()+geom_smooth("lm")
g
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha(1/2))+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", aes(size=4), alpha(1/2))+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
a
1
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2, aed(color=drv))
g+geom_point(size=4,alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv))+geom_label(title="Swirl Rules!")
g+geom_point(aes(color=drv))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g_geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
qplot(myx, myy, type="1", ylim = c(-3,3))
ggplot(myx, myy, type="1", ylim = c(-3,3))
1
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g+geom_line(0)
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line(aes(ylim(-3,3)))
1
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x=displ, y-hwy, color=factor(year))
)
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y="Highway Mileage", title="Swril Rules!")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y="Highway Mileage", title="Swril Rules !")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2,se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
with(diamonds$price)
1
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
now
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, shape=cut, color=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut)+geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets=.~cut)+geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1, length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
ggplot(diamonds, aes(depth, price))
g <- ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd]
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut
)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + stats_smooth("loess")
library(ggplot2)
qplot(votes, rating, data = movies) + stats_smooth("loess")
library("swirl")
rm(list=ls())
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hlust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red","orange","purple"),lwd = 2)
points(cx, cy, col=c("red","orange","purple"),pch=3, cex=2, lwd = 2)
mdist(x, y, ,cx, cy)
mdist(x, y, cx, cy)
apply(distTmp, cx, cy, which.min(distTmp))
apply(distTmp, colnames(distTmp), which.min()))
apply(distTmp, colnames(distTmp), which.min)
a
1
apply(distTmp,2,which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lxd=2)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
library("swirl")
Joel
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*t(matv)
mat
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1"2"]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- 1
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[1:2])
a2 <- (svd1$u[,1:2] * svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,2:5] %*% diag(svd1$d[2:5]) %*% t(svd1$v[,2:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library("swirl")
rm(list=ls())
swirl()
dim(ssd)
names(ssd[562:563,])
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, boolean=1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(c(1:6))
dist(x[,:3])
dist(x[,1:3])
dist(x[,1:3],sub1)
1
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,10:12,maxCon])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[],-c(562,563)], kmeans=6)
kClust <- kmeans(sub1[,-c(562,563)], kmeans=6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="walkdown Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(Hmisc)
head(activity_steps)
data <- read.csv("activity.csv", header = TRUE, sep = ",")
library(ggplot2)
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
setwd("~/Data Scientist/Course 5 - Reproducible Research/RepData_PeerAssessment1")
data <- read.csv("activity.csv", header = TRUE, sep = ",")
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
activity <- read.csv("activity.csv", header = TRUE, sep = ",")
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
qplot(total_steps, binwidth = 1000, xlab = "Total Number of Steps Taken Each Day"
, main = "Histogram of the Total Number of Steps Taken Each Day")
qplot(total_steps, binwidth = 1000, xlab = "Total Number of Steps Taken Each Day"
, main = "Histogram of the Total Number of Steps Taken Each Day")
qplot(total_steps, binwidth = 1000, xlab = "Total Number of Steps Taken Each Day"
, main = "Histogram of the Total Number of Steps Taken Each Day")
library(dplyr)
activity_steps <- activity %>%
group_by(interval) %>%
summarise(mean_steps = mean(steps, na.rm = TRUE))
ggplot(data = activity_steps, aes(x = interval, y = mean_steps)) + geom_line() + xlab("5 Minute Interval") + ylab("Average Number of Steps Taken") + ggtitle( "Average Daily Activity Pattern")
max_steps <- which.max(activity_steps$mean_steps)
activity_missing <- merge(activity, activity_steps, by = 'interval')
head(activity_missing)
?mutate
?mutate_if
activity_missing <- mutate_if(activity_missing, is.na(activity_missing$steps) = activity_missing$mean_steps)
?nutate
?mutate
head(activity_missing)
activity_missing <- activity_missing %>%
mutate(if(is.na(steps) {steps = mean_steps}))
activity_missing <- activity_missing %>%
mutate(steps = if(is.na(steps)), mean_steps)
activity_missing <- activity_missing %>%
mutate(steps = if(is.na(steps), mean_steps))
activity_missing <- activity_missing %>%
mutate(steps_new = mean_steps)
activity_missing <- activity_missing %>%
mutate(steps_new = ifelse(is.na(steps),mean_steps,steps))
head(activity_missing)
activity_missing <- merge(activity, activity_steps, by = 'interval') %>%
mutate(steps_new = ifelse(is.na(steps),mean_steps,steps))
activity_missing <- merge(activity, activity_steps, by = 'interval') %>%
mutate(steps = ifelse(is.na(steps),mean_steps,steps))
head(activity_missing)
total_steps_missing <- tapply(activity_missing$steps, activity_missing$date, sum)
qplot(total_steps_missing, binwidth = 1000, xlab = "Total Number of Steps Taken Each Day"
, main = "With Missing replaced")
mean(total_steps_missing)
#[1] 9354.23
median(total_steps_missing)
#[1] 10395
median(total_steps_missing)
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = TRUE)
mean(total_steps)
median(total_steps)
view(activity_steps)
View(activity_steps)
View(activity_missing)
activity_day <- activity_missing %>%
mutate(wkend_wkday = ifelse(weekdays(date) %in% c("Saturday","Sunday"),"Weekend","Weekday"))
activity_day <- activity_missing %>%
mutate(wkend_wkday = ifelse(weekdays(as.Date(date)) %in% c("Saturday","Sunday"),"Weekend","Weekday"))
head(activity_day)
activity_day_1 <- activity_day %>%
group_by(wkend_wkday, interval) %>%
summarise(mean_steps = mean(steps))
head(activity_day_1)
View(activity_day_1)
ggplot(data = activity_day_1, aes(y = mean_steps)) + geom_line(aes(fill = factor(wkend_wkday)))
ggplot(data = activity_day_1, aes(y = mean_steps)) + geom_line(aes(fill = wkend_wkday))
ggplot(data = activity_day_1, aes(y = mean_steps))
ggplot(data = activity_day_1, aes(x = mean_steps))
ggplot(data = activity_day_1, aes( mean_steps))
g <- ggplot(data = activity_day_1, aes( mean_steps))
g + geom_line(aes(fill = wkend_wkday))
ggplot(data = activity_day_1, aes( mean_steps)) + geom_line(aes(group = wkend_wkday))
ggplot(data = activity_day_1, aes( mean_steps)) + geom_bar(aes(group = wkend_wkday))
g <- ggplot(data = activity_day_1, aes( mean_steps))
g + geom_bar(aes(group = wkend_wkday))
ggplot(data = activity_day_1, aes(interval, mean_steps)) + geom_line(aes(group = wkend_wkday))
ggplot(data = activity_day_1, aes(interval, mean_steps)) + geom_line(aes(group = wkend_wkday, color=c("red","blue")))
ggplot(data = activity_day_1, aes(interval, mean_steps)) + geom_line(aes(group = wkend_wkday, colour = wkend_wkday))
ggplot(data = activity_day_1, aes(interval, mean_steps)) + geom_line(aes(group = wkend_wkday, colour = wkend_wkday)) + xlab("5 Minute Interval") + ylab("Average Number of Steps Taken") + ggtitle( "Average Daily Activity Pattern")
ggplot(data = activity_day_1, aes(interval, mean_steps)) + geom_line(aes(group = wkend_wkday, colour = wkend_wkday)) + xlab("5 Minute Interval") + ylab("Average Number of Steps Taken") + ggtitle( "Average Daily Activity Pattern") + theme(legend.title=element_blank())
knit_with_parameters('~/Data Scientist/Course 5 - Reproducible Research/RepData_PeerAssessment1/PA1_Submission.Rmd')
ggplot(data=activity_day_1, aes(interval, mean_steps)) + geom_line() + facet_grid(wkend_wkday ~ .) + xlab("5 Minute Interval") + ylab("Average Number of Steps Taken") + ggtitle( "Average Daily Activity Pattern")
